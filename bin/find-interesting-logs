#!/bin/sh -

# TODO make these target the beginning of the line too (to make sure we're not hitting spoofed data in the middle of the line)

# https://stackoverflow.com/a/5284410/1198896
IP_REGEX='(:?[[:digit:]]{1,3}.?){4}'

sudo() {
	grep -ve 'sudo\[.*\]: alex : TTY=.* ; PWD=/.* ; USER=root ;' \
	 -e 'pam_unix(sudo:session): session closed for user .*' \
	 -e 'pam_unix(sudo:session): session opened for user .* by alex(uid=0)'
}

login() {
	egrep -ve 'steevie systemd\[[[:digit:]]+\]: pam_unix\(systemd-user:session\): session closed for user .*$' \
	 -e 'steevie systemd\[[[:digit:]]+\]: pam_unix\(systemd-user:session\): session opened for user .* by LOGIN\(uid=0\)$' \
	 -e 'steevie login\[[[:digit:]]+\]: pam_unix\(login:session\): session opened for user .* by LOGIN\(uid=0\)$' \
	 -e 'steevie login\[[[:digit:]]+\]: pam_unix\(login:session\): session closed for user .*$' \
	 -e 'steevie systemd-logind\[[[:digit:]]+\]: New seat seat0\.$' \
	 -e 'steevie systemd-logind\[[[:digit:]]+\]: New session [[:digit:]]+ of user [[:alnum:]]+\.$' \
	 -e 'steevie systemd\[.*\]: pam_unix\(systemd-user:session\): session opened for user .* by \(uid=0\)$' \
	 -e 'steevie systemd-logind\[[[:digit:]]+\]: Removed session [[:digit:]]+\.$'
}

cron() {
	# TODO tighten
	# TODO what the heck is the LIST line about
	egrep -ve 'steevie cron\[.*\]: \(CRON\) INFO \(pidfile fd = 3\)$' \
	 -e 'steevie cron\[.*\]: \(\*system\*\) RELOAD \(/etc/crontab\)$' \
	 -e 'steevie cron\[.*\]: \(CRON\) INFO \(Running @reboot jobs\)$' \
	 -e 'steevie CRON\[.*\]: \(.*\) CMD .*$' \
	 -e 'steevie crontab\[.*\]: \(root\) LIST \(nobody\)$' \
	 -e 'steevie CRON\[.*\]: pam_unix\(cron:session\): session opened for user .* by \(uid=0\)$' \
	 -e 'steevie CRON\[.*\]: pam_unix\(cron:session\): session closed for user .*$'
}

kernel() {
	# TODO make this not so horribly broad
	grep -v 'steevie kernel:'
}

zfs() {
	# TODO tighten this up
	egrep -ve 'steevie zed\[.*\]: ZFS Event Daemon .* \(PID [[:digit:]]+\)' \
	 -e 'steevie zed\[.*\]: Processing events since eid=0$' \
	 -e 'steevie zed\[.*\]: eid=1 class=statechange$' \
	 -e 'steevie zed\[.*\]: eid=[23] class=config.sync pool=rpool$' \
	 -e 'steevie zed\[.*\]: eid=[[:digit:]]+ class=scrub.(start|finish) pool=rpool$' \
	 -e 'steevie zed\[.*\]: Exiting$' \
	 -e 'steevie zpool\[.*\]: no pools available to import$'
}

journald() {
	SIZE='[[:digit:]]+((\.[[:digit:]]+[MG])|B)'
	egrep -ve 'steevie systemd-journald\[.*\]: Journal started$' \
	 -e 'steevie systemd-journald\[.*\]: Journal stopped$' \
	 -e 'steevie systemd-journald\[.*\]: (Runtime|System) journal \(/(var|run)/log/journal/[[:alnum:]]+\) is '"$SIZE"', max '"$SIZE"', '"$SIZE"' free\.$' \
	 -e 'steevie systemd-journald\[.*\]: Time spent on flushing to /var is [[:digit:].]+ms for [[:digit:]]+ entries\.$' \
	 -e 'steevie systemd-journald\[.*\]: $' \
	 -e 'steevie systemd-journald\[.*\]: $'
}

systemd() {
	RATIO='[[:digit:]]+/[[:digit:]]+'
	# TODO this is super loose? Seems like we should tighten it to known boot services, *probably*?
	egrep -ve 'steevie systemd\[1\]: systemd 232 running in system mode. \([[:upper:]4 +]+\)' \
	 -e 'steevie systemd\[1\]: Detected architecture x86-64.$' \
	 -e 'steevie systemd\[1\]: Set hostname to <steevie>.$' \
	 -e 'steevie systemd\[1\]: Found device [[:alnum:] _/]+\.\.$' \
	 -e 'steevie systemd\[[[:digit:]]+\]: Reached target [[:alnum:] -()]+\.$' \
	 -e 'steevie systemd\[[[:digit:]]+\]: Stopped target [[:alnum:] -()]+\.$' \
	 -e 'steevie systemd\[1\]: Mounting [[:alnum:] -,/]+\.\.\.$' \
	 -e 'steevie systemd\[1\]: Mounted [[:alnum:] -/]+\.$' \
	 -e 'steevie systemd\[1\]: Unmounting [[:alnum:] -,/]+\.\.\.$' \
	 -e 'steevie systemd\[1\]: Unmounted [[:alnum:] -/]+\.$' \
	 -e 'steevie systemd\[1\]: .*: Got automount request for .*, triggered by .*$' \
	 -e 'steevie systemd\[1\]: Found device [[:alnum:] -,/]+\.\.\.$' \
	 -e 'steevie systemd\[[[:digit:]]+\]: Starting .*\.$' \
	 -e 'steevie systemd\[1\]: Started .*\.$' \
	 -e 'steevie systemd\[1\]: Stopping .*\.$' \
	 -e 'steevie systemd\[1\]: Stopped .*\.$' \
	 -e 'steevie systemd\[1\]: Reexecuting\.$' \
	 -e 'steevie systemd\[1\]: Reloading\.$' \
	 -e 'steevie systemd\[1\]: Reloading .*\.$' \
	 -e 'steevie systemd\[1\]: Reloaded .*\.$' \
	 -e 'steevie systemd\[[[:digit:]]+\]: Listening on .*\.$' \
	 -e 'steevie systemd\[[[:digit:]]+\]: Closed .*\.$' \
	 -e 'steevie systemd\[1\]: Created slice .*\.$' \
	 -e 'steevie systemd\[1\]: Removed slice .*\.$' \
	 -e 'steevie systemd\[[[:digit:]]+\]: Received SIGRTMIN\+24 from PID [[:digit:]]+ \(kill\)\.$' \
	 -e 'steevie systemd-fsck\[[[:digit:]]+\]: [[:alpha:]_/.]+: recovering journal$' \
	 -e 'steevie systemd-fsck\[[[:digit:]]+\]: [[:alpha:]_/.]+: clean, '"$RATIO"' files, '"$RATIO"' blocks$' \
	 -e 'steevie systemd\[1\]: [[:alnum:].-]+.timer: Adding .* random time\.$' \
	 -e 'steevie systemd\[1\]: .*\.service: Service has no hold-off time, scheduling restart\.$' \
	 -e 'steevie systemd\[[[:digit:]]+\]: Startup finished in .*.$' \
	 -e 'steevie systemd-logind\[[[:digit:]]+\]: Watching system buttons on /dev/input/event[[:digit:]] \(Power Button\)$' \
	 -e 'steevie systemd-logind\[[[:digit:]]+\]: Power key pressed\.$' \
	 -e 'steevie systemd-logind\[[[:digit:]]+\]: Powering Off\.\.\.$' \
	 -e 'steevie systemd-logind\[[[:digit:]]+\]: System is powering down\.$' \
	 -e 'steevie systemd\[1\]: Shutting down\.$' \
	 -e 'steevie systemd-shutdown\[1\]: Sending SIGTERM to remaining processes\.\.\.$'
}

dbus() {
	egrep -ve 'steevie dbus\[[[:digit:]]+\]: \[system\] Reloaded configuration$' \
	 -e 'steevie dbus\[[[:digit:]]+\]: \[system\] Activating via systemd' \
	 -e 'steevie dbus\[[[:digit:]]+\]: \[system\] Successfully activated service'
}

packagekit() {
	egrep -ve 'steevie PackageKit\[[[:digit:]]+\]: daemon start$'
}

cockpit() {
	egrep -ve 'steevie cockpit-ws\[.*\]: Using certificate: /etc/cockpit/ws-certs.d/bundle.cert$' \
	 -e 'steevie cockpit-ws\[.*\]: received invalid HTTP request line$' \
	 -e 'steevie cockpit-ws\[.*\]: couldn'\''t read from connection: Error receiving data: Connection reset by peer$'
}

networking() {
	egrep -ve 'steevie ifup\[[[:digit:]]+\]: RTNETLINK answers: Permission denied$' \
	 -e 'steevie ifup\[[[:digit:]]+\]: RTNETLINK answers: File exists$' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: Internet Systems Consortium DHCP Client' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: Copyright 2004-2016 Internet Systems Consortium.$' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: All rights reserved.$' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: For info, please visit https://www.isc.org/software/dhcp/$' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: $' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: Listening on LPF/eno2/[[:alnum:]:]+$' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: Sending on   LPF/eno2/[[:alnum:]:]+$' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: Sending on   Socket/fallback$' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: DHCPDISCOVER on eno2 to 255.255.255.255 port 67 interval [[:digit:]]+$' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: DHCPREQUEST of '"$IP_REGEX"' on eno2 to '"$IP_REGEX"' port 67$' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: DHCP(OFFER|ACK) of '"$IP_REGEX"' from '"$IP_REGEX"'$' \
	 -e 'steevie dhclient\[[[:digit:]]+\]: bound to '"$IP_REGEX"' -- renewal in [[:digit:]]+ seconds.$' \
	 -e 'steevie NetworkManager\[[[:digit:]]+\]: <info>  \[[[:digit:].]+\] dhcp4 \(eno2\):   (address|gateway|server identifier) '"$IP_REGEX"'$' \
	 -e 'steevie NetworkManager\[[[:digit:]]+\]: <info>  \[[[:digit:].]+\] dhcp4 \(eno2\):   lease time [[:digit:]]+$' \
	 -e 'steevie NetworkManager\[[[:digit:]]+\]: <info>  \[[[:digit:].]+\] dhcp4 \(eno2\):   plen 24 \('"$IP_REGEX"'\)$' \
	 -e 'steevie NetworkManager\[[[:digit:]]+\]: <info>  \[[[:digit:].]+\] dhcp4 \(eno2\):   nameserver '"'$IP_REGEX'"'$' \
	 -e 'steevie NetworkManager\[[[:digit:]]+\]: <info>  \[[[:digit:].]+\] dhcp4 \(eno2\):   domain name '"'Home'"'$' \
	 -e 'steevie NetworkManager\[[[:digit:]]+\]: <info>  \[[[:digit:].]+\] dhcp4 \(eno2\): state changed bound -> bound$' \
	 -e 'steevie nm-dispatcher\[[[:digit:]]+\]: req:1 '"'dhcp4-change'"' \[eno2\]: new request \(2 scripts\)$' \
	 -e 'steevie nm-dispatcher\[[[:digit:]]+\]: req:1 '"'dhcp4-change'"' \[eno2\]: start running ordered scripts...$'
}

timesyncd() {
	egrep -v 'steevie systemd-timesyncd\[.*\]: Synchronized to time server '"$IP_REGEX"':123 \(0.debian.pool.ntp.org\).$'
}

salt() {
	egrep -ve 'steevie salt-minion\[.*\]: \[WARNING \] Minion received a SIGTERM. Exiting.$' \
	 -e 'steevie salt-minion\[.*\]: The Salt Minion is shutdown. Minion received a SIGTERM. Exited.$' \
	 -e 'steevie salt-master\[.*\]: \[WARNING \] Master received a SIGTERM. Exiting.$' \
	 -e 'steevie salt-master\[.*\]: The salt master is shutdown. Master received a SIGTERM. Exited.$'
}

mail() {
	# TODO I'm not sure if the SSL_accept/TLS library problem errors are really uninteresting
	grep -ve 'opendkim[.*]: .{12}: s=.* d=.*' \
	 -e 'opendkim[.*]: .{12}: bad signature data' \
	 -e 'dovecot[.*]: lda(.*@.*): sieve: msgid=<.*@.*>: stored mail into mailbox \'.*\' \
	 -e 'Disconnected in IDLE' \
	| egrep -ve 'postfix/smtpd\[.*\]: connect from [[:alnum:].]+\['"$IP_REGEX"'\]$' \
	 -e 'postfix/smtpd\[.*\]: disconnect from [[:alnum:].]+\['"$IP_REGEX"'\]' \
	 -e 'postfix/smtpd\[.*\]: lost connection after (CONNECT|EHLO|AUTH|RCPT|STARTTLS) from [[:alnum:].]+\['"$IP_REGEX"'\]' \
	 -e 'postfix/smtpd\[.*\]: SSL_accept error from [[:alnum:].]+\['"$IP_REGEX"'\]: -1' \
	 -e 'postfix/smtpd\[.*\]: too many errors after RCPT from unknown\['"$IP_REGEX"'\]' \
	 -e 'postfix/smtpd\[.*\]: warning: TLS library problem: error:1417D0FC:SSL routines:tls_process_client_hello:unknown protocol:../ssl/statem/statem_srvr.c:953:$' \
	 -e 'postfix/smtpd\[.*\]: warning: TLS library problem: error:1417D0FC:SSL routines:tls_process_client_hello:version too low:../ssl/statem/statem_srvr.c:989:$' \
	 -e 'postfix/(local|pipe)\[.*\]: [[:alnum:]]+: to=<.*>, .* \(delivered (to mailbox|via dovecot service)\)' \
	 -e 'postfix/qmgr\[.*\]: [[:alnum:]]+: removed$' \
	 -e 'postfix/pickup\[.*\]: [[:alnum:]]{8}: uid=[[:digit:]]+ from=<.+>$' \
	 -e 'postfix/cleanup\[.*\]: [[:alnum:]]{8}: message-id=<.+>$' \
	 -e 'postfix/qmgr\[.*\]: [[:alnum:]]+: from=<.*@.*>, size=.*, nrcpt=. \(queue active\)$' \
	 -e 'postfix/smtpd\[.*\]: NOQUEUE: reject: RCPT from .*: Recipient address rejected: User unknown in local recipient table' \
	 -e 'postfix/smtpd\[.*\]: NOQUEUE: reject: RCPT from .*: Relay access denied' \
	 -e 'postfix/smtpd\[.*\]: timeout after (CONNECT|AUTH) from unknown\['"$IP_REGEX"'\]' \
	 -e 'postfix/anvil\[.*\]: statistics:'
}

ssh() {
	SSH_PROLOGUE='steevie sshd\[[[:digit:]]{3,7}\]:'
	egrep -ve "$SSH_PROLOGUE"' Invalid user .* from '"$IP_REGEX"'$' \
	 -e "$SSH_PROLOGUE"' Invalid user .* from '"$IP_REGEX"' port [[:digit:]]+$' \
	 -e "$SSH_PROLOGUE"' input_userauth_request: invalid user .* \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' error: maximum authentication attempts exceeded for [[:alnum:]]+ from '"$IP_REGEX"' port [[:digit:]]+ ssh2 \[preauth\]' \
	 -e "$SSH_PROLOGUE"' error: maximum authentication attempts exceeded for invalid user .* from '"$IP_REGEX"' port [[:digit:]]+ ssh2 \[preauth\]' \
	 -e "$SSH_PROLOGUE"' Postponed keyboard-interactive for invalid user .* from '"$IP_REGEX"' port [[:digit:]]+ ssh2 \[preauth\]' \
	 -e "$SSH_PROLOGUE"' Failed (keyboard-interactive/pam|password|none) for invalid user .* from '"$IP_REGEX"' port [[:digit:]]+ ssh2' \
	 -e "$SSH_PROLOGUE"' Failed password for .+ from '"$IP_REGEX"' port [[:digit:]]+ ssh2' \
	 -e "$SSH_PROLOGUE"' error: authentication error for [[:alnum:]]+ from '"$IP_REGEX"'$' \
	 -e "$SSH_PROLOGUE"' error: authentication error for illegal user [[:alnum:]]+ from '"$IP_REGEX"'$' \
	 -e "$SSH_PROLOGUE"' error: PAM: authentication error for  ?.+ from .*$' \
	 -e "$SSH_PROLOGUE"' error: PAM: authentication error for illegal user  ?.+ from '"$IP_REGEX"'$' \
	 -e "$SSH_PROLOGUE"' PAM [[:digit:]] more authentication failures?; logname= uid=0 euid=0 tty=ssh ruser= rhost='"$IP_REGEX"'(  :?user=.*)?$' \
	 -e "$SSH_PROLOGUE"' pam_unix\(sshd:auth\): check pass; user unknown$' \
	 -e "$SSH_PROLOGUE"' pam_unix\(sshd:auth\): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost='"$IP_REGEX"'(  user=.+)?$' \
	 -e "$SSH_PROLOGUE"' error: Received disconnect from '"$IP_REGEX"' port [[:digit:]]{4,5}:[[:digit:]]+: .+$' \
	 -e "$SSH_PROLOGUE"' Received disconnect from '"$IP_REGEX"' port [[:digit:]]{4,5}:[[:digit:]]+: .+$' \
	 -e "$SSH_PROLOGUE"' Disconnected from '"$IP_REGEX"' port [[:digit:]]{4,5}$' \
	 -e "$SSH_PROLOGUE"' Disconnected from '"$IP_REGEX"' port [[:digit:]]{4,5} \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' Disconnected from invalid user [[:alnum:]]+ '"$IP_REGEX"' port [[:digit:]]{4,5} \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' Disconnecting: Too many authentication failures \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' Disconnecting: Change of username or service not allowed' \
	 -e "$SSH_PROLOGUE"' user [[:alnum:]]+ login class  \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' Connection closed by '"$IP_REGEX"' port [[:digit:]]{4,5} \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' Connection closed by '"$IP_REGEX"' port [[:digit:]]{4,5}$' \
	 -e "$SSH_PROLOGUE"' Connection reset by '"$IP_REGEX"' port [[:digit:]]{4,5} \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' Connection reset by '"$IP_REGEX"' port [[:digit:]]{4,5}$' \
	 -e "$SSH_PROLOGUE"' (fatal: )?Unable to negotiate with '"$IP_REGEX"' port [[:digit:]]{4,5}: no matching key exchange method found. Their offer: [[:alnum:],-]+ \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' (fatal: )?Unable to negotiate with '"$IP_REGEX"' port [[:digit:]]{4,5}: no matching cipher found. Their offer: [[:alnum:].,@-]+ \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' (fatal: )?Unable to negotiate with '"$IP_REGEX"' port [[:digit:]]{4,5}: no matching host key type found. Their offer: [[:alnum:]-]+ \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' Bad protocol version identification .* from '"$IP_REGEX"' port [[:digit:]]+$' \
	 -e "$SSH_PROLOGUE"' ssh_dispatch_run_fatal: Connection from '"$IP_REGEX"' port [[:digit:]]+: message authentication code incorrect \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' Bad packet length [[:digit:]]+. \[preauth\]$' \
	 -e "$SSH_PROLOGUE"' Did not receive identification string from '"$IP_REGEX"'' \
	 -e "$SSH_PROLOGUE"' reverse mapping checking getaddrinfo for [[:alnum:].-]+ \['"$IP_REGEX"'\] failed - POSSIBLE BREAK-IN ATTEMPT!' \
	 -e "$SSH_PROLOGUE"' Address '"$IP_REGEX"' maps to [[:alnum:].-]+, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT!' \
	 -e "$SSH_PROLOGUE"' Could not write ident string to '"$IP_REGEX"' port [[:digit:]]+' \
	 -e "$SSH_PROLOGUE"' Accepted publickey for .*' \
	 -e "$SSH_PROLOGUE"' pam_unix\(sshd:session\): session opened for user .* by \(uid=0\)$' \
	 -e "$SSH_PROLOGUE"' pam_unix\(sshd:session\): session closed for user .*$' \
	 -e "$SSH_PROLOGUE"' Server listening on (0.0.0.0|::) port 22.$'
}

redis() {
	egrep -ve 'steevie run-parts\[.*\]: run-parts: executing /etc/redis/redis-server.*$'
}

mysql() {
	egrep -ve 'steevie mysqld\[.*\]: .* \[Note\] /usr/sbin/mysqld .* starting as process [[:digit:]]+ ...$' \
	 -e 'steevie mysql\[.*\]: Starting MariaDB database server: mysqld [. ]+$' \
	 -e 'steevie mysql\[.*\]: Stopping MariaDB database server: mysqld.$'
}

certbot() {
	egrep -ve 'steevie certbot\[.*\]: The following certs are not due for renewal yet:$' \
	 -e 'steevie certbot\[.*\]: [[:space:]]+[[:alnum:]./-]+ \(skipped\)$'
}

sandstorm() {
	egrep -ve 'steevie sandstorm\[.*\]: Sandstorm started. PID = [[:digit:]]+$' \
	 -e 'steevie sandstorm\[.*\]: Sandstorm is not running.$'
}

znc() {
	egrep -ve 'steevie znc\[.*\]: Checking for list of available modules...$' \
	 -e 'steevie znc\[.*\]: Opening config \[/var/lib/znc/.znc/configs/znc.conf\]...$' \
	 -e 'steevie znc\[.*\]: Loading (global|network) module \[[[:alpha:]_]+\]... \[/usr/lib/znc/[[:alpha:]_]+.so\]$' \
	 -e 'steevie znc\[.*\]: Binding to port \[\+[[:digit:]]+\]...$' \
	 -e 'steevie znc\[.*\]: Loading user \[[[:alpha:]-]+\]$' \
	 -e 'steevie znc\[.*\]: Loading user module \[[[:alpha:]]+\]...$' \
	 -e 'steevie znc\[.*\]: Loading network \[[[:alnum:]]+\]$' \
	 -e 'steevie znc\[.*\]: Adding server \[[[:alnum:]. +:]+]...$' \
	 -e 'steevie znc\[.*\]: Forking into the background... \[pid: .*\]$' \
	 -e 'steevie znc\[.*\]: ZNC .* - http://znc.in$'
}

ejabberd() {
	egrep -ve 'steevie su\[.*\]: Successful su for ejabberd by root$' \
	 -e 'steevie su\[.*\]: \+ \?\?\? root:ejabberd$' \
	 -e 'steevie su\[.*\]: pam_unix\(su:session\): session opened for user ejabberd by \(uid=0\)$' \
	 -e 'steevie su\[.*\]: pam_unix\(su:session\): session closed for user ejabberd$' \
	 -e 'steevie epmd\[.*\]: epmd: .* got KILL_REQ - terminates normal$'
}

pygopherd() {
	egrep -ve 'steevie pygopherd\[.*\]: '"$IP_REGEX"' \[HTTPProtocol/BuckGophermapHandler\]: /$'
}

smartd() {
	# TODO should we be worried about these temperature changes?
	egrep -ve 'Device: /dev/sda \[SAT\], SMART Usage Attribute: 190 Temperature_Case changed from .* to .*$' \
	 -e 'Device: /dev/sdb \[SAT\], SMART Usage Attribute: 194 Temperature_Celsius changed from .* to .*$'
}

huginn() {
	# TODO figure out a way to not filter literally everything from workers out
	egrep -ve 'steevie huginn-jobs@.*service\[.*\]:  --> Sleeping for 15 seconds' \
	 -e 'steevie huginn-jobs@.*service\[.*\]: Queuing schedule for .*' \
	 -e 'steevie huginn-jobs@.*service\[.*\]: Queuing event propagation' \
	 -e 'steevie huginn-jobs@.*service\[.*\]: .* received:' \
	 -e 'steevie huginn-jobs@.*service\[.*\]: Agent#[[:digit:]]+: Fetching' \
	 -e 'steevie huginn-jobs@.*service\[.*\]: Agent#[[:digit:]]+: Extracting' \
	 -e 'steevie huginn-jobs@.*service\[.*\]: Agent#[[:digit:]]+: Values extracted:' \
	 -e 'steevie huginn-jobs@.*service\[.*\]:'
}

misc() {
	egrep -ve 'steevie cracklib\[.*\]: no dictionary update necessary.'
}

journalctl \
| kernel \
| sudo \
| zfs \
| cron \
| mail \
| timesyncd \
| systemd \
| journald \
| dbus \
| packagekit \
| cockpit \
| networking \
| salt \
| ssh \
| redis \
| mysql \
| certbot \
| znc \
| ejabberd \
| pygopherd \
| sandstorm \
| login \
| smartd \
| huginn \
| misc \
| grep -v '^-- Reboot --$'
