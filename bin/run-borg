#!/bin/sh

# TODO make sure this handles LXD datasets right?
# TODO make this write to a logfile (useful to know when the last *real* run was, not counting lockfile-related bailouts)

set -eu

. $(dirname $0)/../lib/run-borg/functions.sh

BORG_FLAGS=''

while ! [ -z ${1+x} ]; do
	if [ $1 = '-v' ]; then
		BORG_FLAGS='-v'
		shift
	fi
done

test_is_root

DOTLOCK_ARGS=""

lockfile_acquire

# TODO trap crashes and run gc

# Garbage-collect old staging snapshots in case we crashed last time
gc_if_needed

# Freeze a view of the filesystem so Borg backups are atomic
freeze_fs

# It takes a *long* time to walk system directories so we only do so when
# triggered to do so by a dpkg postrun hook.
# Note that we always walk /usr/local because modifying that won't trigger
# the dpkg hook. Ditto with /usr/lib/node_modules and npm. /boot isn't there
# either because of tools like update-initramfs.
SYSTEM_DIRS='usr/local usr/lib/node_modules'
BORG_TAG=''
if test -e /var/local/borg-trigger-system-backup; then
	SYSTEM_DIRS='bin lib lib64 sbin usr'
	BORG_TAG='-withsystem'
fi

cd /media/borg-stage

borg create $BORG_FLAGS --progress --stats --compression auto,lzma,6 \
--exclude root/.gdfuse/default/cache \
--exclude root/.cache \
--exclude home/*/.cache \
--exclude var/cache \
--exclude var/backups \
--exclude var/tmp \
--exclude var/log \
/media/gdrive/borg::steevie-$(date +%F-%H:%M-%a-%s)$BORG_TAG \
etc \
home \
srv \
root \
var \
opt \
/boot \
lost+found \
vmlinuz* \
initrd.img* \
snap \
lxd \
$SYSTEM_DIRS

# Need to not be in /media/borg-stage so that it can be unmounted
cd - >/dev/null

gc

rm -f /var/local/borg-trigger-system-backup

lockfile_release
